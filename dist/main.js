/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/button.js */ \"./src/scripts/button.js\");\n/* harmony import */ var _scripts_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/map.js */ \"./src/scripts/map.js\");\n/* harmony import */ var _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/year.js */ \"./src/scripts/year.js\");\n\n\n\n// import Animate from \"./scripts/animate.js\"\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const data = document.getElementById(\"my_dataviz\");\n  const map = new _scripts_map_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](data);\n  const data1 = document.getElementById(\"tuberculosis\");\n  new _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data1, map, \"tuberculosis\");\n  const data2 = document.getElementById(\"malaria\");\n  new _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data2, map, \"malaria\");\n  const data3 = document.getElementById(\"HIV\");\n  new _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data3, map, \"HIV\");\n  const data2019 = document.getElementById(\"covid19\");\n  new _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data2019, map, \"covid19\");\n  const data4 = document.getElementById(\"guineaWorm\");\n  new _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data4, map, \"guineaworm\");\n  const data5 = document.getElementById(\"polio\");\n  new _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data5, map, \"polio\");\n  const data6 = document.getElementById(\"leprosy\");\n  new _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data6, map, \"leprosy\");\n  const data00 = document.getElementById(\"2000\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data00, map, 2000);\n  const data01 = document.getElementById(\"2001\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data01, map, 2001);\n  const data02 = document.getElementById(\"2002\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data02, map, 2002);\n  const data03 = document.getElementById(\"2003\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data03, map, 2003);\n  const data04 = document.getElementById(\"2004\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data04, map, 2004);\n  const data05 = document.getElementById(\"2005\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data05, map, 2005);\n  const data06 = document.getElementById(\"2006\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data06, map, 2006);\n  const data07 = document.getElementById(\"2007\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data07, map, 2007);\n  const data08 = document.getElementById(\"2008\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data08, map, 2008);\n  const data09 = document.getElementById(\"2009\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data09, map, 2009);\n  const data10 = document.getElementById(\"2010\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data10, map, 2010);\n  const data11 = document.getElementById(\"2011\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data11, map, 2011);\n  const data12 = document.getElementById(\"2012\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data12, map, 2012);\n  const data13 = document.getElementById(\"2013\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data13, map, 2013);\n  const data14 = document.getElementById(\"2014\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data14, map, 2014);\n  const data15 = document.getElementById(\"2015\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data15, map, 2015);\n  const data16 = document.getElementById(\"2016\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data16, map, 2016);\n  const data17 = document.getElementById(\"2017\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data17, map, 2017);\n  const data18 = document.getElementById(\"2018\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data18, map, 2018);\n  const data19 = document.getElementById(\"2019\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data19, map, 2019);\n  const data20 = document.getElementById(\"2020\");\n  new _scripts_year_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data20, map, 2020);\n\n  // const animate = document.getElementById(\"animate\");\n  // new Animate(animate,map);\n});\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n\n// });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/button.js":
/*!*******************************!*\
  !*** ./src/scripts/button.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Button {\n  constructor(ele, map, disease) {\n    this.ele = ele;\n    this.map = map;\n    this.disease = disease;\n    this.ele.addEventListener(\"click\", this.handleClick.bind(this));\n  }\n  handleClick() {\n    this.map.resetMap(this.disease, this.map.year);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Button);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9idXR0b24uanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLE1BQU0sQ0FBQztFQUNUQyxXQUFXLENBQUNDLEdBQUcsRUFBQ0MsR0FBRyxFQUFDQyxPQUFPLEVBQUM7SUFDeEIsSUFBSSxDQUFDRixHQUFHLEdBQUdBLEdBQUc7SUFDZCxJQUFJLENBQUNDLEdBQUcsR0FBR0EsR0FBRztJQUNkLElBQUksQ0FBQ0MsT0FBTyxHQUFHQSxPQUFPO0lBQ3RCLElBQUksQ0FBQ0YsR0FBRyxDQUFDRyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDQyxXQUFXLENBQUNDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztFQUVuRTtFQUVBRCxXQUFXLEdBQUU7SUFDVCxJQUFJLENBQUNILEdBQUcsQ0FBQ0ssUUFBUSxDQUFDLElBQUksQ0FBQ0osT0FBTyxFQUFDLElBQUksQ0FBQ0QsR0FBRyxDQUFDTSxJQUFJLENBQUM7RUFDakQ7QUFDSjtBQUVBLCtEQUFlVCxNQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdF9nbG9iYWxfaGVhbHRoLy4vc3JjL3NjcmlwdHMvYnV0dG9uLmpzP2JjOGUiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQnV0dG9uIHtcbiAgICBjb25zdHJ1Y3RvcihlbGUsbWFwLGRpc2Vhc2Upe1xuICAgICAgICB0aGlzLmVsZSA9IGVsZTtcbiAgICAgICAgdGhpcy5tYXAgPSBtYXBcbiAgICAgICAgdGhpcy5kaXNlYXNlID0gZGlzZWFzZTtcbiAgICAgICAgdGhpcy5lbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuaGFuZGxlQ2xpY2suYmluZCh0aGlzKSk7XG5cbiAgICB9XG5cbiAgICBoYW5kbGVDbGljaygpe1xuICAgICAgICB0aGlzLm1hcC5yZXNldE1hcCh0aGlzLmRpc2Vhc2UsdGhpcy5tYXAueWVhcik7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBCdXR0b247XG4iXSwibmFtZXMiOlsiQnV0dG9uIiwiY29uc3RydWN0b3IiLCJlbGUiLCJtYXAiLCJkaXNlYXNlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImhhbmRsZUNsaWNrIiwiYmluZCIsInJlc2V0TWFwIiwieWVhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/button.js\n");

/***/ }),

/***/ "./src/scripts/map.js":
/*!****************************!*\
  !*** ./src/scripts/map.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sidebar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sidebar.js */ \"./src/scripts/sidebar.js\");\n\nfunction htmlString() {\n  return `<svg id=\"my_dataviz\">\n<script>\n  const svg = d3.select(\"svg\"),\n    width = svg.attr(\"width\"),\n    height = svg.attr(\"height\");\n  \n  const path = d3.geoPath();\n  const projection = d3.geoNaturalEarth1()\n    .scale(150)\n    .center([0,0])\n  \n  const data = d3.map();\n  const colorScale = d3.scaleThreshold()\n    .domain([-1,0,1,3,10,30,100,300,1000,3000,10000,30000,100000,300000,1000000])\n    .range(['#FFFFFF','#888888','#fff7ec', '#feedd5','#fee3bd', '#fdd6a5',\n    '#fdc791', '#fdb27c','#fb9865', '#f67d53','#ed6243', '#df432e',\n    '#cc2317', '#b50b07','#970101', '#7f0000']);\n\n  d3.queue()\n    .defer(d3.json, \"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson\")\n    .defer(d3.csv, \\`./src/scripts/data/malaria.csv\\`, function(d) { if (d.year==2020) {data.set(d.name, +d.cases)}; })\n    .await(ready);\n  \n  function ready(error, topo) {\n  \n    let mouseOver = function(d) {\n      d3.selectAll(\".Country\")\n        .transition()\n        .duration(200)\n        .style(\"opacity\", .5)\n        .style(\"stroke\", \"black\")\n      d3.select(this)\n        .transition()\n        .duration(200)\n        .style(\"opacity\", 1)\n        .style(\"stroke\", \"black\");\n        \n\n      console.log(d.total === -1 ? \"No data\" : d.total);\n      const conversionHash = {\n        ABW: 'Aruba',\n        AFG: 'Afghanistan',\n        AGO: 'Angola',\n        AIA: 'Anguilla',\n        ALB: 'Albania',\n        AND: 'Andorra',\n        ARE: 'United Arab Emirates',\n        ARG: 'Argentina',\n        ARM: 'Armenia',\n        ASM: 'American Samoa',\n        ATG: 'Antigua and Barbuda',\n        AUS: 'Australia',\n        AUT: 'Austria',\n        AZE: 'Azerbaijan',\n        BDI: 'Burundi',\n        BEL: 'Belgium',\n        BEN: 'Benin',\n        BFA: 'Burkina Faso',\n        BGD: 'Bangladesh',\n        BGR: 'Bulgaria',\n        BHR: 'Bahrain',\n        BHS: 'Bahamas',\n        BIH: 'Bosnia and Herzegovina',\n        BLR: 'Belarus',\n        BLZ: 'Belize',\n        BMU: 'Bermuda',\n        BOL: 'Bolivia',\n        BRA: 'Brazil',\n        BRB: 'Barbados',\n        BRN: 'Brunei',\n        BTN: 'Bhutan',\n        BWA: 'Botswana',\n        CAF: 'Central African Republic',\n        CAN: 'Canada',\n        CHE: 'Switzerland',\n        CHI: 'Channel islands',\n        CHL: 'Chile',\n        CHN: 'China',\n        CIV: \"Côte d'Ivoire\",\n        CMR: 'Cameroon',\n        COD: 'Democratic Republic of the Congo',\n        COG: 'Congo',\n        COK: 'Cook Islands',\n        COL: 'Colombia',\n        COM: 'Comoros',\n        CPV: 'Cabo Verde',\n        CRI: 'Costa Rica',\n        CUB: 'Cuba',\n        CUW: 'Curaçao',\n        CYM: 'Cayman Islands',\n        CYP: 'Cyprus',\n        CZE: 'Czechia',\n        DEU: 'Germany',\n        DJI: 'Djibouti',\n        DMA: 'Dominica',\n        DNK: 'Denmark',\n        DOM: 'Dominican Republic',\n        DZA: 'Algeria',\n        ECU: 'Ecuador',\n        EGY: 'Egypt',\n        ERI: 'Eritrea',\n        ESP: 'Spain',\n        EST: 'Estonia',\n        ETH: 'Ethiopia',\n        FIN: 'Finland',\n        FJI: 'Fiji',\n        FLK: 'Falkland Islands (Malvinas)',\n        FRA: 'France',\n        FRO: 'Faroe Islands',\n        FSM: 'Micronesia',\n        GAB: 'Gabon',\n        GBR: 'United Kingdom',\n        GEO: 'Georgia',\n        GHA: 'Ghana',\n        GIB: 'Gibraltar',\n        GIN: 'Guinea',\n        GLP: 'Guadeloupe',\n        GMB: 'Gambia',\n        GNB: 'Guinea-Bissau',\n        GNQ: 'Equatorial Guinea',\n        GRC: 'Greece',\n        GRD: 'Grenada',\n        GRL: 'Greenland',\n        GTM: 'Guatemala',\n        GUF: 'French Guiana',\n        GUM: 'Guam',\n        GUY: 'Guyana',\n        HKG: 'Hong Kong',\n        HND: 'Honduras',\n        HRV: 'Croatia',\n        HTI: 'Haiti',\n        HUN: 'Hungary',\n        IDN: 'Indonesia',\n        IMN: 'Isle of Man',\n        IND: 'India',\n        IRL: 'Ireland',\n        IRN: 'Iran',\n        IRQ: 'Iraq',\n        ISL: 'Iceland',\n        ISR: 'Israel',\n        ITA: 'Italy',\n        JAM: 'Jamaica',\n        JOR: 'Jordan',\n        JPN: 'Japan',\n        KAZ: 'Kazakhstan',\n        KEN: 'Kenya',\n        KGZ: 'Kyrgyzstan',\n        KHM: 'Cambodia',\n        KIR: 'Kiribati',\n        KNA: 'Saint Kitts and Nevis',\n        KOR: 'South Korea',\n        KWT: 'Kuwait',\n        LAO: 'Laos',\n        LBN: 'Lebanon',\n        LBR: 'Liberia',\n        LBY: 'Libya',\n        LCA: 'Saint Lucia',\n        LIE: 'Liechtenstein',\n        LKA: 'Sri Lanka',\n        LSO: 'Lesotho',\n        LTU: 'Lithuania',\n        LUX: 'Luxembourg',\n        LVA: 'Latvia',\n        MAC: 'Macao',\n        MAR: 'Morocco',\n        MCO: 'Monaco',\n        MDA: 'Moldova',\n        MDG: 'Madagascar',\n        MDV: 'Maldives',\n        ME1: 'Serbia and Montenegro',\n        MEX: 'Mexico',\n        MHL: 'Marshall Islands',\n        MKD: 'North Macedonia',\n        MLI: 'Mali',\n        MLT: 'Malta',\n        MMR: 'Myanmar',\n        MNE: 'Montenegro',\n        MNG: 'Mongolia',\n        MNP: 'Northern Mariana Islands',\n        MOZ: 'Mozambique',\n        MRT: 'Mauritania',\n        MTQ: 'Martinique',\n        MUS: 'Mauritius',\n        MWI: 'Malawi',\n        MYS: 'Malaysia',\n        MYT: 'Mayotte',\n        NAM: 'Namibia',\n        NCL: 'New Caledonia',\n        NER: 'Niger',\n        NGA: 'Nigeria',\n        NIC: 'Nicaragua',\n        NIU: 'Niue',\n        NLD: 'Netherlands',\n        NOR: 'Norway',\n        NPL: 'Nepal',\n        NRU: 'Nauru',\n        NZL: 'New Zealand',\n        OMN: 'Oman',\n        PAK: 'Pakistan',\n        PAN: 'Panama',\n        PER: 'Peru',\n        PHL: 'Philippines',\n        PLW: 'Palau',\n        PNG: 'Papua New Guinea',\n        POL: 'Poland',\n        PRI: 'Puerto Rico',\n        PRK: 'North Korea',\n        PRT: 'Portugal',\n        PRY: 'Paraguay',\n        PSE: 'Palestine',\n        PYF: 'French Polynesia',\n        QAT: 'Qatar',\n        REU: 'Reunion',\n        ROU: 'Romania',\n        RUS: 'Russia',\n        RWA: 'Rwanda',\n        SAU: 'Saudi Arabia',\n        SDF: 'Sudan',\n        SDN: 'Sudan',\n        SEN: 'Senegal',\n        SGP: 'Singapore',\n        SHN: 'Saint Helena',\n        SLB: 'Solomon Islands',\n        SLE: 'Sierra Leone',\n        SLV: 'El Salvador',\n        SMR: 'San Marino',\n        SOM: 'Somalia',\n        SPM: 'Saint Pierre and Miquelon',\n        SRB: 'Serbia',\n        SSD: 'South Sudan',\n        STP: 'Sao Tome and Principe',\n        SUR: 'Suriname',\n        SVK: 'Slovakia',\n        SVN: 'Slovenia',\n        SWE: 'Sweden',\n        SWZ: 'Eswatini',\n        SXM: 'Sint Maarten',\n        SYC: 'Seychelles',\n        SYR: 'Syria',\n        TCA: 'Turks and Caicos Islands',\n        TCD: 'Chad',\n        TGO: 'Togo',\n        THA: 'Thailand',\n        TJK: 'Tajikistan',\n        TKL: 'Tokelau',\n        TKM: 'Turkmenistan',\n        TLS: 'Timor-Leste',\n        TON: 'Tonga',\n        TTO: 'Trinidad and Tobago',\n        TUN: 'Tunisia',\n        TUR: 'Türkiye (Turkey)',\n        TUV: 'Tuvalu',\n        TZA: 'Tanzania',\n        UGA: 'Uganda',\n        UKR: 'Ukraine',\n        URY: 'Uruguay',\n        USA: 'United States of America',\n        UZB: 'Uzbekistan',\n        VCT: 'Saint Vincent and the Grenadines',\n        VEN: 'Venezuela',\n        VGB: 'British Virgin Islands',\n        VIR: 'Virgin Islands',\n        VNM: 'Vietnam',\n        VUT: 'Vanuatu',\n        WSM: 'Samoa',\n        YEM: 'Yemen',\n        ZAF: 'South Africa',\n        ZMB: 'Zambia',\n        ZWE: 'Zimbabwe'\n      }\n\n      console.log(conversionHash[d.id])\n    }\n  \n    let mouseLeave = function(d) {\n      d3.selectAll(\".Country\")\n        .transition()\n        .duration(200)\n        .style(\"opacity\", .8)\n        .style(\"stroke\", \"transparent\")\n      d3.select(this)\n        .transition()\n        .duration(200)\n        .style(\"stroke\", \"transparent\")\n    }\n    function eventHandler(e) {\n      const country = e.target;\n    \n      country.style.stroke = \"red\";\n    }\n\n    svg.append(\"g\")\n      .selectAll(\"path\")\n      .data(topo.features)\n      .enter()\n      .append(\"path\")\n        // draw each country\n        .attr(\"d\", d3.geoPath()\n          .projection(projection)\n        )\n        // set the color of each country\n        .attr(\"fill\", function (d) {\n          d.total = data.get(d.id);\n          if (d.total === undefined) d.total = -1;\n          return colorScale(d.total);\n        })\n        .style(\"stroke\", \"transparent\")\n        .attr(\"class\", function(d){ return \"Country\" } )\n        .style(\"opacity\", .8)\n        .on(\"mouseover\", mouseOver )\n        .on(\"mouseleave\", mouseLeave )\n      }\n\n      \n  </script>\n\n</svg>`;\n}\nfunction htmlString2(chosenDisease, chosenYear) {\n  return `<svg id=\"my_dataviz\" width=\"850\" height=\"450\">\n<script>\n  \n  d3.queue()\n    .defer(d3.json, \"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson\")\n    .defer(d3.csv, \\`./src/scripts/data/${chosenDisease}.csv\\`, function(d) { if (d.year==\\`${chosenYear}\\`) {data.set(d.name, +d.cases)}; })\n    .await(ready);\n  \n  function ready(error, topo) {\n  \n    let mouseOver = function(d) {\n      d3.selectAll(\".Country\")\n        .transition()\n        .duration(200)\n        .style(\"opacity\", .5)\n        .style(\"stroke\", \"black\")\n      d3.select(this)\n        .transition()\n        .duration(200)\n        .style(\"opacity\", 1)\n        .style(\"stroke\", \"black\")\n    }\n  \n    let mouseLeave = function(d) {\n      d3.selectAll(\".Country\")\n        .transition()\n        .duration(200)\n        .style(\"opacity\", .8)\n        .style(\"stroke\", \"transparent\")\n      d3.select(this)\n        .transition()\n        .duration(200)\n        .style(\"stroke\", \"transparent\")\n    }\n  \n    svg.append(\"g\")\n      .selectAll(\"path\")\n      .data(topo.features)\n      .enter()\n      .append(\"path\")\n        // draw each country\n        .attr(\"d\", d3.geoPath()\n          .projection(projection)\n        )\n        // set the color of each country\n        .attr(\"fill\", function (d) {\n          d.total = data.get(d.id);\n          if (d.total === undefined) d.total = -1;\n          return colorScale(d.total);\n        })\n        .style(\"stroke\", \"transparent\")\n        .attr(\"class\", function(d){ return \"Country\" } )\n        .style(\"opacity\", .8)\n        .on(\"mouseover\", mouseOver )\n        .on(\"mouseleave\", mouseLeave )\n      }\n\n      \n  </script>\n\n</svg>`;\n}\nvar setInnerHTML = function (elm, html) {\n  elm.innerHTML = html;\n  Array.from(elm.querySelectorAll(\"script\")).forEach(oldScript => {\n    const newScript = document.createElement(\"script\");\n    Array.from(oldScript.attributes).forEach(attr => newScript.setAttribute(attr.name, attr.value));\n    newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n    oldScript.parentNode.replaceChild(newScript, oldScript);\n  });\n};\nclass Map {\n  constructor(ele) {\n    this.ele = ele;\n    this.year = 2020;\n    this.disease = 'malaria';\n    setInnerHTML(this.ele, htmlString());\n    const sidebar = document.getElementById(\"context\");\n    this.sidebar = new _sidebar_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](sidebar);\n  }\n  resetMap(disease, year) {\n    this.disease = disease;\n    this.year = year;\n    setInnerHTML(this.ele, htmlString2(\"nulldata\", 2020));\n    setInnerHTML(this.ele, htmlString2(disease, this.year));\n    this.sidebar.resetSidebar(disease, year);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Map);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/map.js\n");

/***/ }),

/***/ "./src/scripts/sidebar.js":
/*!********************************!*\
  !*** ./src/scripts/sidebar.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction htmlString() {\n  return `<h3>Malaria 2020</h3>\n<text>\n  Every 75 seconds, a child under 5 dies of malaria.\n  <br>\n  <br>\n  Malaria is a mosquito born illness, disproportionately killing young children in poor, tropical countries.\n  <br>  \n  <br>\n  Malaria can be prevented by sleeping under $6 insecticide-treated bednets or taking anti-malaria medication -- it can also be treated.  Malaria rates have decreased significantly since the 2000s as more people have gotten access to bednets.\n</text>`;\n}\nfunction htmlString2(disease, year) {\n  if (disease === \"malaria\") {\n    return `<h3>Malaria ${year}</h3>\n        <text>\n          Every 75 seconds, a child under 5 dies of malaria.\n          <br>\n          <br>\n          Malaria is a mosquito born illness, disproportionately killing young children in poor, tropical countries. \n          <br>\n          <br>\n          Malaria can be prevented by sleeping under $6 insecticide-treated bednets or taking anti-malaria medication -- it can also be treated.  Malaria rates have decreased significantly since the 2000s as more people have gotten access to bednets.\n        </text>`;\n  } else if (disease === \"tuberculosis\") {\n    return `<h3>Tuberculosis ${year}</h3>\n        <text>\n        Tuberculosis was the leading cause of death by infectious disease (after COVID-19), with over 1 million deaths in 2020.\n        <br>\n        <br>\n        Tuberculosis continues to kill people in nearly every country on earth but is esepcially serious in poorer countries.  Among people who die of HIV, tuberculosis is most often what actually kills them, accounting for around 30% of deaths.  (HIV deaths are not included in this map.)\n        <br>\n        <br>\n        Tuberculosis is curable with treatment.\n        </text>`;\n  } else {\n    if (disease === \"HIV\") {\n      return `<h3>HIV ${year}</h3>\n        <text>\n        HIV deaths peaked in 2004, when HIV was the leading cause of death across Africa.  (From 1997-2006, HIV accounted for the majority of deaths in Zambia.)  Although the situation has improved sunstantially, HIV continues to be the leading cause of death in South Africa, the six countries it borders, and Malawi.\n        <br>\n        <br>\n        HIV it both preventable and treatable, but it is not currently curable.\n        </text>`;\n    } else if (disease === \"leprosy\") {\n      return `<h3>Leprosy ${year}</h3>\n        <text>\n        Hansen's disease, better known as leprosy, is a disease causing nerve damage, which can lead to blindness, paralysis, or untreated skin injuries.  Although it's often thought of as an ancient disease, it's still present in many countries, with over 100,000 cases worldwide in 2020.\n        <br>\n        <br>\n        Hansen's is not very infectious and can be cured with treatment, though the treatment takes 1-2 years.  Nerve damage and blindness caused by Hansen's disease are not reversible.\n        </text>`;\n    } else {\n      if (disease === \"guineaworm\") {\n        return `<h3>Guinea Worm ${year}</h3>\n        <text>\n        Along with polio, dracunculiasis (the diseases caused by a guinea worm infection) could plausibly be eradicated worldwide.  Although it doesn't kill people, guinea worm infections are debilitating and very painful.  (Watch <a href=\"https://www.youtube.com/watch?v=oCB1A2gFvuU\" target=\"_blank\">this video</a> if you're not squeamish.)\n        <br>\n        <br>\n        Guinea worm infections are a result of drinking contaminated water, and it can be prevented with a cheap filter.  It's only natural resevoir is in humans, but Chad has reported infections in dogs, as well.\n        </text>`;\n      } else if (disease === \"polio\") {\n        return `<h3>Polio ${year}</h3>\n        <text>\n        To date, smallpox is the only human disease that has been eradicated, but polio may be next.  Two of the three strains of wild polio have been eliminated, and as of 2020, wild polio is present in just two countries: Afghanistan and Pakistan.\n        <br>\n        <br>\n        Polio can be prevented with vaccines, but universal coverage is difficult to achieve in some areas.  Diagnosis is also difficult because polio is often asymptomatic.\n        </text>`;\n      } else {\n        return `<h3>COVID-19 ${year}</h3>\n        <text>\n        COVID-19 paragraph 1\n        <br>\n        <br>\n        COVID-19 paragraph 2\n        </text>`;\n      }\n    }\n  }\n}\nclass Sidebar {\n  constructor(ele) {\n    this.ele = ele;\n    this.ele.innerHTML = htmlString();\n  }\n  resetSidebar(disease, year) {\n    this.ele.innerHTML = htmlString2(disease, year);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sidebar);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/sidebar.js\n");

/***/ }),

/***/ "./src/scripts/year.js":
/*!*****************************!*\
  !*** ./src/scripts/year.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Year {\n  constructor(ele, map, year) {\n    this.ele = ele;\n    this.map = map;\n    this.year = year;\n    this.ele.addEventListener(\"click\", this.handleClick.bind(this));\n  }\n  handleClick() {\n    this.map.resetMap(this.map.disease, this.year);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Year);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy95ZWFyLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxJQUFJLENBQUM7RUFDUEMsV0FBVyxDQUFDQyxHQUFHLEVBQUNDLEdBQUcsRUFBQ0MsSUFBSSxFQUFDO0lBQ3JCLElBQUksQ0FBQ0YsR0FBRyxHQUFHQSxHQUFHO0lBQ2QsSUFBSSxDQUFDQyxHQUFHLEdBQUdBLEdBQUc7SUFDZCxJQUFJLENBQUNDLElBQUksR0FBR0EsSUFBSTtJQUNoQixJQUFJLENBQUNGLEdBQUcsQ0FBQ0csZ0JBQWdCLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQ0MsV0FBVyxDQUFDQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7RUFFbkU7RUFFQUQsV0FBVyxHQUFFO0lBQ1QsSUFBSSxDQUFDSCxHQUFHLENBQUNLLFFBQVEsQ0FBQyxJQUFJLENBQUNMLEdBQUcsQ0FBQ00sT0FBTyxFQUFDLElBQUksQ0FBQ0wsSUFBSSxDQUFDO0VBQ2pEO0FBQ0o7QUFFQSwrREFBZUosSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL2phdmFzY3JpcHRfZ2xvYmFsX2hlYWx0aC8uL3NyYy9zY3JpcHRzL3llYXIuanM/NDkyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBZZWFyIHtcbiAgICBjb25zdHJ1Y3RvcihlbGUsbWFwLHllYXIpe1xuICAgICAgICB0aGlzLmVsZSA9IGVsZTtcbiAgICAgICAgdGhpcy5tYXAgPSBtYXBcbiAgICAgICAgdGhpcy55ZWFyID0geWVhcjtcbiAgICAgICAgdGhpcy5lbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuaGFuZGxlQ2xpY2suYmluZCh0aGlzKSk7XG5cbiAgICB9XG5cbiAgICBoYW5kbGVDbGljaygpe1xuICAgICAgICB0aGlzLm1hcC5yZXNldE1hcCh0aGlzLm1hcC5kaXNlYXNlLHRoaXMueWVhcik7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBZZWFyO1xuIl0sIm5hbWVzIjpbIlllYXIiLCJjb25zdHJ1Y3RvciIsImVsZSIsIm1hcCIsInllYXIiLCJhZGRFdmVudExpc3RlbmVyIiwiaGFuZGxlQ2xpY2siLCJiaW5kIiwicmVzZXRNYXAiLCJkaXNlYXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/year.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0X2dsb2JhbF9oZWFsdGgvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;