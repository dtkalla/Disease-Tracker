/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/button.js */ \"./src/scripts/button.js\");\n/* harmony import */ var _scripts_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/map.js */ \"./src/scripts/map.js\");\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const data = document.getElementById(\"my_dataviz\");\n  new _scripts_map_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](data);\n  const dataCopy = document.getElementById(\"copy\");\n  const map = new _scripts_map_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](dataCopy);\n  const data1 = document.getElementById(\"tuberculosis\");\n  new _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data1, map, \"tuberculosis\");\n  const data2 = document.getElementById(\"malaria\");\n  new _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data2, map, \"malaria\");\n  const data3 = document.getElementById(\"HIV\");\n  new _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data3, map, \"HIV\");\n  const data2019 = document.getElementById(\"covid19\");\n  new _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data2019, map, \"covid19\");\n  const data4 = document.getElementById(\"guineaWorm\");\n  new _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data4, map, \"guineaworm\");\n  const data5 = document.getElementById(\"polio\");\n  new _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data5, map, \"polio\");\n  const data6 = document.getElementById(\"leprosy\");\n  new _scripts_button_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data6, map, \"leprosy\");\n  const modal = document.getElementById(\"myModal\");\n  const modalButton = document.getElementById(\"modalButton\");\n  const span = document.getElementsByClassName(\"close\")[0];\n  modal.style.display = \"none\";\n  modalButton.onclick = function () {\n    modal.style.display = \"block\";\n  };\n  span.onclick = function () {\n    modal.style.display = \"none\";\n  };\n  window.onclick = function (event) {\n    if (event.target == modal) {\n      modal.style.display = \"none\";\n    }\n  };\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQXlDO0FBQ047QUFFbkNFLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsTUFBTTtFQUNoRCxNQUFNQyxJQUFJLEdBQUdGLFFBQVEsQ0FBQ0csY0FBYyxDQUFDLFlBQVksQ0FBQztFQUNsRCxJQUFJSix1REFBRyxDQUFDRyxJQUFJLENBQUM7RUFDYixNQUFNRSxRQUFRLEdBQUdKLFFBQVEsQ0FBQ0csY0FBYyxDQUFDLE1BQU0sQ0FBQztFQUNoRCxNQUFNRSxHQUFHLEdBQUcsSUFBSU4sdURBQUcsQ0FBQ0ssUUFBUSxDQUFDO0VBRzdCLE1BQU1FLEtBQUssR0FBR04sUUFBUSxDQUFDRyxjQUFjLENBQUMsY0FBYyxDQUFDO0VBQ3JELElBQUlMLDBEQUFNLENBQUNRLEtBQUssRUFBQ0QsR0FBRyxFQUFDLGNBQWMsQ0FBQztFQUNwQyxNQUFNRSxLQUFLLEdBQUdQLFFBQVEsQ0FBQ0csY0FBYyxDQUFDLFNBQVMsQ0FBQztFQUNoRCxJQUFJTCwwREFBTSxDQUFDUyxLQUFLLEVBQUNGLEdBQUcsRUFBQyxTQUFTLENBQUM7RUFDL0IsTUFBTUcsS0FBSyxHQUFHUixRQUFRLENBQUNHLGNBQWMsQ0FBQyxLQUFLLENBQUM7RUFDNUMsSUFBSUwsMERBQU0sQ0FBQ1UsS0FBSyxFQUFDSCxHQUFHLEVBQUMsS0FBSyxDQUFDO0VBQzNCLE1BQU1JLFFBQVEsR0FBR1QsUUFBUSxDQUFDRyxjQUFjLENBQUMsU0FBUyxDQUFDO0VBQ25ELElBQUlMLDBEQUFNLENBQUNXLFFBQVEsRUFBQ0osR0FBRyxFQUFDLFNBQVMsQ0FBQztFQUNsQyxNQUFNSyxLQUFLLEdBQUdWLFFBQVEsQ0FBQ0csY0FBYyxDQUFDLFlBQVksQ0FBQztFQUNuRCxJQUFJTCwwREFBTSxDQUFDWSxLQUFLLEVBQUNMLEdBQUcsRUFBQyxZQUFZLENBQUM7RUFDbEMsTUFBTU0sS0FBSyxHQUFHWCxRQUFRLENBQUNHLGNBQWMsQ0FBQyxPQUFPLENBQUM7RUFDOUMsSUFBSUwsMERBQU0sQ0FBQ2EsS0FBSyxFQUFDTixHQUFHLEVBQUMsT0FBTyxDQUFDO0VBQzdCLE1BQU1PLEtBQUssR0FBR1osUUFBUSxDQUFDRyxjQUFjLENBQUMsU0FBUyxDQUFDO0VBQ2hELElBQUlMLDBEQUFNLENBQUNjLEtBQUssRUFBQ1AsR0FBRyxFQUFDLFNBQVMsQ0FBQztFQUUvQixNQUFNUSxLQUFLLEdBQUdiLFFBQVEsQ0FBQ0csY0FBYyxDQUFDLFNBQVMsQ0FBQztFQUVoRCxNQUFNVyxXQUFXLEdBQUdkLFFBQVEsQ0FBQ0csY0FBYyxDQUFDLGFBQWEsQ0FBQztFQUUxRCxNQUFNWSxJQUFJLEdBQUdmLFFBQVEsQ0FBQ2dCLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUV4REgsS0FBSyxDQUFDSSxLQUFLLENBQUNDLE9BQU8sR0FBRyxNQUFNO0VBRTVCSixXQUFXLENBQUNLLE9BQU8sR0FBRyxZQUFXO0lBQzdCTixLQUFLLENBQUNJLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE9BQU87RUFDakMsQ0FBQztFQUVESCxJQUFJLENBQUNJLE9BQU8sR0FBRyxZQUFXO0lBQ3RCTixLQUFLLENBQUNJLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE1BQU07RUFDaEMsQ0FBQztFQUVERSxNQUFNLENBQUNELE9BQU8sR0FBRyxVQUFTRSxLQUFLLEVBQUU7SUFDN0IsSUFBSUEsS0FBSyxDQUFDQyxNQUFNLElBQUlULEtBQUssRUFBRTtNQUN2QkEsS0FBSyxDQUFDSSxLQUFLLENBQUNDLE9BQU8sR0FBRyxNQUFNO0lBQ2hDO0VBQ0osQ0FBQztBQUVMLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2phdmFzY3JpcHRfZ2xvYmFsX2hlYWx0aC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCdXR0b24gZnJvbSBcIi4vc2NyaXB0cy9idXR0b24uanNcIjtcbmltcG9ydCBNYXAgZnJvbSBcIi4vc2NyaXB0cy9tYXAuanNcIjtcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xuICAgIGNvbnN0IGRhdGEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm15X2RhdGF2aXpcIik7XG4gICAgbmV3IE1hcChkYXRhKTtcbiAgICBjb25zdCBkYXRhQ29weSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29weVwiKTtcbiAgICBjb25zdCBtYXAgPSBuZXcgTWFwKGRhdGFDb3B5KTtcblxuICAgIFxuICAgIGNvbnN0IGRhdGExID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0dWJlcmN1bG9zaXNcIik7XG4gICAgbmV3IEJ1dHRvbihkYXRhMSxtYXAsXCJ0dWJlcmN1bG9zaXNcIik7XG4gICAgY29uc3QgZGF0YTIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hbGFyaWFcIik7XG4gICAgbmV3IEJ1dHRvbihkYXRhMixtYXAsXCJtYWxhcmlhXCIpO1xuICAgIGNvbnN0IGRhdGEzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJISVZcIik7XG4gICAgbmV3IEJ1dHRvbihkYXRhMyxtYXAsXCJISVZcIik7XG4gICAgY29uc3QgZGF0YTIwMTkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvdmlkMTlcIik7XG4gICAgbmV3IEJ1dHRvbihkYXRhMjAxOSxtYXAsXCJjb3ZpZDE5XCIpO1xuICAgIGNvbnN0IGRhdGE0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJndWluZWFXb3JtXCIpO1xuICAgIG5ldyBCdXR0b24oZGF0YTQsbWFwLFwiZ3VpbmVhd29ybVwiKTtcbiAgICBjb25zdCBkYXRhNSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicG9saW9cIik7XG4gICAgbmV3IEJ1dHRvbihkYXRhNSxtYXAsXCJwb2xpb1wiKTtcbiAgICBjb25zdCBkYXRhNiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibGVwcm9zeVwiKTtcbiAgICBuZXcgQnV0dG9uKGRhdGE2LG1hcCxcImxlcHJvc3lcIik7XG5cbiAgICBjb25zdCBtb2RhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibXlNb2RhbFwiKTtcblxuICAgIGNvbnN0IG1vZGFsQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtb2RhbEJ1dHRvblwiKTtcblxuICAgIGNvbnN0IHNwYW4gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiY2xvc2VcIilbMF07XG5cbiAgICBtb2RhbC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG5cbiAgICBtb2RhbEJ1dHRvbi5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIG1vZGFsLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgfVxuXG4gICAgc3Bhbi5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIG1vZGFsLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICB9XG5cbiAgICB3aW5kb3cub25jbGljayA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIGlmIChldmVudC50YXJnZXQgPT0gbW9kYWwpIHtcbiAgICAgICAgICAgIG1vZGFsLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgfVxuICAgIH1cblxufSk7XG5cbiJdLCJuYW1lcyI6WyJCdXR0b24iLCJNYXAiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJkYXRhIiwiZ2V0RWxlbWVudEJ5SWQiLCJkYXRhQ29weSIsIm1hcCIsImRhdGExIiwiZGF0YTIiLCJkYXRhMyIsImRhdGEyMDE5IiwiZGF0YTQiLCJkYXRhNSIsImRhdGE2IiwibW9kYWwiLCJtb2RhbEJ1dHRvbiIsInNwYW4iLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwic3R5bGUiLCJkaXNwbGF5Iiwib25jbGljayIsIndpbmRvdyIsImV2ZW50IiwidGFyZ2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/button.js":
/*!*******************************!*\
  !*** ./src/scripts/button.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Button {\n  constructor(ele, map, disease) {\n    this.ele = ele;\n    this.map = map;\n    this.disease = disease;\n    this.ele.addEventListener(\"click\", this.handleClick.bind(this));\n  }\n  handleClick() {\n    this.map.resetMap(this.disease, this.map.year);\n    this.map.resetMap(this.disease, this.map.year);\n    this.map.resetMap(this.disease, this.map.year);\n    const html = svg._groups[0][0].innerHTML.split('<g>');\n    const len = html.length;\n    svg._groups[0][0].innerHTML = [html[len - 3], html[len - 2], html[len - 1]].join('<g>');\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Button);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9idXR0b24uanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLE1BQU0sQ0FBQztFQUNUQyxXQUFXLENBQUNDLEdBQUcsRUFBQ0MsR0FBRyxFQUFDQyxPQUFPLEVBQUM7SUFDeEIsSUFBSSxDQUFDRixHQUFHLEdBQUdBLEdBQUc7SUFDZCxJQUFJLENBQUNDLEdBQUcsR0FBR0EsR0FBRztJQUNkLElBQUksQ0FBQ0MsT0FBTyxHQUFHQSxPQUFPO0lBQ3RCLElBQUksQ0FBQ0YsR0FBRyxDQUFDRyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDQyxXQUFXLENBQUNDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztFQUNuRTtFQUVBRCxXQUFXLEdBQUU7SUFDVCxJQUFJLENBQUNILEdBQUcsQ0FBQ0ssUUFBUSxDQUFDLElBQUksQ0FBQ0osT0FBTyxFQUFDLElBQUksQ0FBQ0QsR0FBRyxDQUFDTSxJQUFJLENBQUM7SUFDN0MsSUFBSSxDQUFDTixHQUFHLENBQUNLLFFBQVEsQ0FBQyxJQUFJLENBQUNKLE9BQU8sRUFBQyxJQUFJLENBQUNELEdBQUcsQ0FBQ00sSUFBSSxDQUFDO0lBQzdDLElBQUksQ0FBQ04sR0FBRyxDQUFDSyxRQUFRLENBQUMsSUFBSSxDQUFDSixPQUFPLEVBQUMsSUFBSSxDQUFDRCxHQUFHLENBQUNNLElBQUksQ0FBQztJQUM3QyxNQUFNQyxJQUFJLEdBQUdDLEdBQUcsQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxTQUFTLENBQUNDLEtBQUssQ0FBQyxLQUFLLENBQUM7SUFDckQsTUFBTUMsR0FBRyxHQUFHTCxJQUFJLENBQUNNLE1BQU07SUFDdkJMLEdBQUcsQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxTQUFTLEdBQUcsQ0FBQ0gsSUFBSSxDQUFDSyxHQUFHLEdBQUMsQ0FBQyxDQUFDLEVBQUNMLElBQUksQ0FBQ0ssR0FBRyxHQUFDLENBQUMsQ0FBQyxFQUFDTCxJQUFJLENBQUNLLEdBQUcsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDRSxJQUFJLENBQUMsS0FBSyxDQUFDO0VBQ25GO0FBQ0o7QUFFQSwrREFBZWpCLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0X2dsb2JhbF9oZWFsdGgvLi9zcmMvc2NyaXB0cy9idXR0b24uanM/YmM4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBCdXR0b24ge1xuICAgIGNvbnN0cnVjdG9yKGVsZSxtYXAsZGlzZWFzZSl7XG4gICAgICAgIHRoaXMuZWxlID0gZWxlO1xuICAgICAgICB0aGlzLm1hcCA9IG1hcDtcbiAgICAgICAgdGhpcy5kaXNlYXNlID0gZGlzZWFzZTtcbiAgICAgICAgdGhpcy5lbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuaGFuZGxlQ2xpY2suYmluZCh0aGlzKSk7XG4gICAgfVxuXG4gICAgaGFuZGxlQ2xpY2soKXtcbiAgICAgICAgdGhpcy5tYXAucmVzZXRNYXAodGhpcy5kaXNlYXNlLHRoaXMubWFwLnllYXIpO1xuICAgICAgICB0aGlzLm1hcC5yZXNldE1hcCh0aGlzLmRpc2Vhc2UsdGhpcy5tYXAueWVhcik7XG4gICAgICAgIHRoaXMubWFwLnJlc2V0TWFwKHRoaXMuZGlzZWFzZSx0aGlzLm1hcC55ZWFyKTtcbiAgICAgICAgY29uc3QgaHRtbCA9IHN2Zy5fZ3JvdXBzWzBdWzBdLmlubmVySFRNTC5zcGxpdCgnPGc+JylcbiAgICAgICAgY29uc3QgbGVuID0gaHRtbC5sZW5ndGhcbiAgICAgICAgc3ZnLl9ncm91cHNbMF1bMF0uaW5uZXJIVE1MID0gW2h0bWxbbGVuLTNdLGh0bWxbbGVuLTJdLGh0bWxbbGVuLTFdXS5qb2luKCc8Zz4nKVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uO1xuXG4iXSwibmFtZXMiOlsiQnV0dG9uIiwiY29uc3RydWN0b3IiLCJlbGUiLCJtYXAiLCJkaXNlYXNlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImhhbmRsZUNsaWNrIiwiYmluZCIsInJlc2V0TWFwIiwieWVhciIsImh0bWwiLCJzdmciLCJfZ3JvdXBzIiwiaW5uZXJIVE1MIiwic3BsaXQiLCJsZW4iLCJsZW5ndGgiLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/button.js\n");

/***/ }),

/***/ "./src/scripts/map.js":
/*!****************************!*\
  !*** ./src/scripts/map.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sidebar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sidebar.js */ \"./src/scripts/sidebar.js\");\n\nfunction htmlString() {\n  return `<script>\n  svg = d3.select(\"svg\");\n  svg.colorScale = d3.scaleThreshold()\n  .domain([-1,0,1,3,10,30,100,300,1000,3000,10000,30000,100000,300000,1000000])\n  .range(['#FFFFFF','#888888','#fff7ec', '#feedd5','#fee3bd', '#fdd6a5',\n  '#fdc791', '#fdb27c','#fb9865', '#f67d53','#ed6243', '#df432e',\n  '#cc2317', '#b50b07','#970101', '#7f0000'])\n\n  tooltip = d3.select(\"#tooltip\")\n    .style(\"opacity\", 0)\n    .attr(\"class\", \"tooltip\")\n    .style(\"background-color\", \"white\")\n    .style(\"border\", \"solid\")\n    .style(\"border-width\", \"1px\")\n    .style(\"border-radius\", \"5px\")\n    .style(\"padding\", \"5px\")\n    .style(\"position\", \"absolute\")\n  \n  path = d3.geoPath();\n  projection = d3.geoNaturalEarth1()\n    .scale(150)\n    .center([0,0])\n\n    \n  data = d3.map();\n\n  d3.queue()\n    .defer(d3.json, \"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson\")\n    .defer(d3.csv, \"./src/scripts/data/malaria.csv\", function(d) { if (d.year==2020) {data.set(d.name, +d.cases)}; })\n    .await(ready);\n  \n  function ready(error, topo) {\n  \n    let mouseOver = function(d) {\n      d3.selectAll(\".Country\")\n        .transition()\n        .duration(200)\n        .style(\"stroke\", \"black\")\n        \n\n      const conversionHash = {\n        ABW: 'Aruba', AFG: 'Afghanistan', AGO: 'Angola', AIA: 'Anguilla',\n        ALB: 'Albania', AND: 'Andorra', ARE: 'United Arab Emirates',\n        ARG: 'Argentina', ARM: 'Armenia', ASM: 'American Samoa',\n        ATG: 'Antigua and Barbuda', AUS: 'Australia',AUT: 'Austria',\n        AZE: 'Azerbaijan', BDI: 'Burundi', BEL: 'Belgium', BEN: 'Benin',\n        BFA: 'Burkina Faso', BGD: 'Bangladesh', BGR: 'Bulgaria', BHR: 'Bahrain',\n        BHS: 'Bahamas', BIH: 'Bosnia and Herzegovina', BLR: 'Belarus',\n        BLZ: 'Belize', BMU: 'Bermuda', BOL: 'Bolivia', BRA: 'Brazil',\n        BRB: 'Barbados', BRN: 'Brunei', BTN: 'Bhutan', BWA: 'Botswana',\n        CAF: 'Central African Republic', CAN: 'Canada', CHE: 'Switzerland',\n        CHI: 'Channel islands', CHL: 'Chile', CHN: 'China', CIV: \"Côte d'Ivoire\",\n        CMR: 'Cameroon', COD: 'Democratic Republic of the Congo', COG: 'Congo',\n        COK: 'Cook Islands', COL: 'Colombia', COM: 'Comoros', CPV: 'Cabo Verde',\n        CRI: 'Costa Rica', CUB: 'Cuba', CUW: 'Curaçao', CYM: 'Cayman Islands',\n        CYP: 'Cyprus', CZE: 'Czechia', DEU: 'Germany', DJI: 'Djibouti', DMA: 'Dominica',\n        DNK: 'Denmark', DOM: 'Dominican Republic', DZA: 'Algeria', ECU: 'Ecuador',\n        EGY: 'Egypt', ERI: 'Eritrea', ESH: 'Western Sahara', ESP: 'Spain',\n        EST: 'Estonia', ETH: 'Ethiopia', FIN: 'Finland', FJI: 'Fiji',\n        FLK: 'Falkland Islands (Malvinas)', FRA: 'France', FRO: 'Faroe Islands',\n        FSM: 'Micronesia', GAB: 'Gabon', GBR: 'United Kingdom', GEO: 'Georgia',\n        GHA: 'Ghana', GIB: 'Gibraltar', GIN: 'Guinea', GLP: 'Guadeloupe',\n        GMB: 'Gambia', GNB: 'Guinea-Bissau', GNQ: 'Equatorial Guinea', GRC: 'Greece',\n        GRD: 'Grenada', GRL: 'Greenland', GTM: 'Guatemala', GUF: 'French Guiana',\n        GUM: 'Guam', GUY: 'Guyana', HKG: 'Hong Kong', HND: 'Honduras',\n        HRV: 'Croatia', HTI: 'Haiti', HUN: 'Hungary', IDN: 'Indonesia',\n        IMN: 'Isle of Man', IND: 'India', IRL: 'Ireland', IRN: 'Iran', IRQ: 'Iraq',\n        ISL: 'Iceland', ISR: 'Israel', ITA: 'Italy', JAM: 'Jamaica', JOR: 'Jordan',\n        JPN: 'Japan', KAZ: 'Kazakhstan', KEN: 'Kenya', KGZ: 'Kyrgyzstan',\n        KHM: 'Cambodia', KIR: 'Kiribati', KNA: 'Saint Kitts and Nevis',\n        KOR: 'South Korea', KWT: 'Kuwait', LAO: 'Laos', LBN: 'Lebanon',\n        LBR: 'Liberia', LBY: 'Libya', LCA: 'Saint Lucia', LIE: 'Liechtenstein',\n        LKA: 'Sri Lanka', LSO: 'Lesotho', LTU: 'Lithuania', LUX: 'Luxembourg',\n        LVA: 'Latvia', MAC: 'Macao', MAR: 'Morocco', MCO: 'Monaco', MDA: 'Moldova',\n        MDG: 'Madagascar', MDV: 'Maldives', ME1: 'Serbia and Montenegro',\n        MEX: 'Mexico', MHL: 'Marshall Islands', MKD: 'North Macedonia', MLI: 'Mali',\n        MLT: 'Malta', MMR: 'Myanmar', MNE: 'Montenegro', MNG: 'Mongolia',\n        MNP: 'Northern Mariana Islands', MOZ: 'Mozambique', MRT: 'Mauritania',\n        MTQ: 'Martinique', MUS: 'Mauritius', MWI: 'Malawi', MYS: 'Malaysia',\n        MYT: 'Mayotte', NAM: 'Namibia', NCL: 'New Caledonia', NER: 'Niger',\n        NGA: 'Nigeria', NIC: 'Nicaragua', NIU: 'Niue', NLD: 'Netherlands',\n        NOR: 'Norway', NPL: 'Nepal', NRU: 'Nauru', NZL: 'New Zealand',\n        OMN: 'Oman', PAK: 'Pakistan', PAN: 'Panama', PER: 'Peru',\n        PHL: 'Philippines', PLW: 'Palau', PNG: 'Papua New Guinea', POL: 'Poland',\n        PRI: 'Puerto Rico', PRK: 'North Korea', PRT: 'Portugal', PRY: 'Paraguay',\n        PSE: 'Palestine', PYF: 'French Polynesia', QAT: 'Qatar', REU: 'Reunion',\n        ROU: 'Romania', RUS: 'Russia', RWA: 'Rwanda', SAU: 'Saudi Arabia',\n        SDF: 'Sudan', SDN: 'Sudan', SEN: 'Senegal', SGP: 'Singapore',\n        SHN: 'Saint Helena', SLB: 'Solomon Islands', SLE: 'Sierra Leone',\n        SLV: 'El Salvador', SMR: 'San Marino', SOM: 'Somalia',\n        SPM: 'Saint Pierre and Miquelon', SRB: 'Serbia', SSD: 'South Sudan',\n        STP: 'Sao Tome and Principe', SUR: 'Suriname', SVK: 'Slovakia',\n        SVN: 'Slovenia', SWE: 'Sweden', SWZ: 'Eswatini', SXM: 'Sint Maarten',\n        SYC: 'Seychelles', SYR: 'Syria', TCA: 'Turks and Caicos Islands',\n        TCD: 'Chad', TGO: 'Togo', THA: 'Thailand', TJK: 'Tajikistan',\n        TKL: 'Tokelau', TKM: 'Turkmenistan', TLS: 'Timor-Leste', TON: 'Tonga',\n        TTO: 'Trinidad and Tobago', TUN: 'Tunisia', TUR: 'Türkiye (Turkey)',\n        TUV: 'Tuvalu', TZA: 'Tanzania', UGA: 'Uganda', UKR: 'Ukraine',\n        URY: 'Uruguay', USA: 'United States of America', UZB: 'Uzbekistan',\n        VCT: 'Saint Vincent and the Grenadines', VEN: 'Venezuela',\n        VGB: 'British Virgin Islands', VIR: 'Virgin Islands', VNM: 'Vietnam',\n        VUT: 'Vanuatu', WSM: 'Samoa', YEM: 'Yemen', ZAF: 'South Africa',\n        ZMB: 'Zambia', ZWE: 'Zimbabwe'\n      }\n      \n      tooltip\n      .style(\"opacity\", 0.8)\n      .html(d.total == -1 ? \"No data\" : conversionHash[d.id] + \": \" + d.total)\n      .style(\"left\", (d3.event.pageX + 30) + \"px\")  \n      .style(\"top\", (d3.event.pageY - 30) + \"px\");\n    }\n  \n    let mouseLeave = function(d) {\n      d3.selectAll(\".Country\")\n        .transition()\n        .style(\"stroke\", \"transparent\")\n\n      tooltip\n        .style(\"opacity\", 0)\n    }\n\n\n    svg.append(\"g\")\n      .selectAll(\"path\")\n      .data(topo.features)\n      .enter()\n      .append(\"path\")\n\n      .attr(\"d\", d3.geoPath()\n          .projection(projection)\n        )\n\n        .attr(\"fill\", function (d) {\n          d.total = data.get(d.id);\n          if (d.total === undefined || d.total == null) d.total = -1;\n          return svg.colorScale(d.total);\n        })\n        .style(\"stroke\", \"transparent\")\n        .attr(\"class\", function(d){ return \"Country\" } )\n        .on(\"mouseover\", mouseOver )\n        .on(\"mouseleave\", mouseLeave )\n      }\n\n\n  </script>`;\n}\nfunction htmlString0() {\n  return `<svg2 id=\"copy\">\n<script>\n\n  let tooltip = d3.select(\"#tooltip\")\n    .style(\"opacity\", 0)\n    .attr(\"class\", \"tooltip\")\n    .style(\"background-color\", \"white\")\n    .style(\"border\", \"solid\")\n    .style(\"border-width\", \"1px\")\n    .style(\"border-radius\", \"5px\")\n    .style(\"padding\", \"5px\")\n    .style(\"position\", \"absolute\")\n\n  </script>\n\n</svg2>`;\n}\nfunction htmlString2(chosenDisease, chosenYear) {\n  return `<script>\n  \n  d3.queue()\n    .defer(d3.json, \"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson\")\n    .defer(d3.csv, \\`./src/scripts/data/${chosenDisease}.csv\\`, function(d) { if (d.year==\\`${chosenYear}\\`) {data.set(d.name, +d.cases)}; })\n    .await(ready);\n  \n  </script>`;\n}\nvar setInnerHTML = function (ele, html) {\n  ele.innerHTML = html;\n  Array.from(ele.querySelectorAll(\"script\")).forEach(oldScript => {\n    const newScript = document.createElement(\"script\");\n    Array.from(oldScript.attributes).forEach(attr => newScript.setAttribute(attr.name, attr.value));\n    newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n    oldScript.parentNode.replaceChild(newScript, oldScript);\n  });\n};\nclass Map {\n  constructor(ele) {\n    this.ele = ele;\n    this.year = 2020;\n    this.disease = 'malaria';\n    this.min = 2000;\n    this.max = 2020;\n    setInnerHTML(this.ele, htmlString());\n    const sidebar = document.getElementById(\"context\");\n    this.sidebar = new _sidebar_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](sidebar);\n    let slider = document.getElementById(\"myRange\");\n    this.minYear = document.getElementById(\"minyear\");\n    this.maxYear = document.getElementById(\"maxyear\");\n    slider.map = this;\n    this.slider = slider;\n    slider.oninput = function () {\n      this.map.resetMap(this.disease, this.value);\n      const html = svg._groups[0][0].innerHTML.split('<g>');\n      if (html.length > 3) {\n        svg._groups[0][0].innerHTML = [html[1], html[2], html[3]].join('<g>');\n      }\n    };\n    this.resetMap(\"malaria\", 2020);\n  }\n  resetMap(disease, year) {\n    this.disease = disease;\n    this.year = year;\n    if (disease == 'polio') {\n      this.min = 2016;\n      this.max = 2021;\n    } else if (disease == 'leprosy') {\n      this.min = 2012;\n      this.max = 2021;\n    } else {\n      if (disease == 'covid19') {\n        this.min = 2020;\n        this.max = 2021;\n      } else if (disease == 'guineaworm') {\n        this.min = 1989;\n        this.max = 2021;\n      } else {\n        if (disease == 'malaria') {\n          this.min = 2000;\n          this.max = 2020;\n        } else {\n          this.min = 2000;\n          this.max = 2021;\n        }\n      }\n    }\n    if (this.year > this.max) this.year = this.max;\n    if (this.year < this.min) this.year = this.min;\n    setInnerHTML(this.ele, htmlString2(this.disease, this.year));\n    this.sidebar.resetSidebar(this.disease, this.year);\n    this.minYear.innerHTML = `${this.min}`;\n    this.maxYear.innerHTML = `${this.max}`;\n    this.slider.disease = disease;\n    this.slider.min = this.min;\n    this.slider.max = this.max;\n    this.slider.value = this.year;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Map);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/map.js\n");

/***/ }),

/***/ "./src/scripts/sidebar.js":
/*!********************************!*\
  !*** ./src/scripts/sidebar.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction htmlString() {\n  return `<h3>Malaria 2020</h3>\n<text>\n  Every 75 seconds, a child under 5 dies of malaria.\n  <br>\n  <br>\n  Malaria is a mosquito born illness, disproportionately killing young children in poor, tropical countries.\n  <br>  \n  <br>\n  Malaria can be prevented by sleeping under $6 insecticide-treated bednets or taking anti-malaria medication -- it can also be treated.  Malaria rates have decreased significantly since the 2000s as more people have gotten access to bednets.\n</text>`;\n}\nfunction htmlString2(disease, year) {\n  if (disease === \"malaria\") {\n    return `<h3>Malaria ${year}</h3>\n        <text>\n          Malaria is a mosquito-born illness, disproportionately killing young children in poor, tropical countries.  It's a leading killer of young children and a major drag of economic growth in malaria-endemic countries.\n          <br>\n          <br>\n          Malaria can be prevented by sleeping under insecticide-treated bednets (cost: $6) or taking anti-malaria medication -- it can also be treated.  Malaria rates have decreased significantly since the 2000s as more people have gotten access to bednets.\n        </text>`;\n  } else if (disease === \"tuberculosis\") {\n    return `<h3>Tuberculosis ${year}</h3>\n        <text>\n        Tuberculosis was the leading cause of death by infectious disease (after COVID-19), with over 1 million deaths in 2020.\n        <br>\n        <br>\n        Tuberculosis continues to kill people in nearly every country on earth but is especially serious in poorer countries.  Among people who die of HIV, tuberculosis is most often what actually kills them, accounting for around 30% of deaths.  (HIV-related tuberculosis deaths are included in the HIV map, not here.)\n        <br>\n        <br>\n        Tuberculosis is curable with treatment.\n        </text>`;\n  } else {\n    if (disease === \"HIV\") {\n      return `<h3>HIV ${year}</h3>\n        <text>\n        HIV deaths peaked in 2004, when HIV was the leading cause of death across Africa.  (From 1997-2006, HIV accounted for the majority of deaths in Zambia.)  Although the situation has improved substantially, HIV continues to be the leading cause of death in South Africa, the six countries it borders, and Malawi.\n        <br>\n        <br>\n        HIV is both preventable and treatable, but it is not currently curable.\n        </text>`;\n    } else if (disease === \"leprosy\") {\n      return `<h3>Leprosy ${year}</h3>\n        <text>\n        Hansen's disease, better known as leprosy, is a disease causing nerve damage, which can lead to blindness, paralysis, or untreated skin injuries.  Although it's often thought of as an ancient disease, it's still present in many countries, with over 100,000 estimated cases worldwide in 2020.\n        <br>\n        <br>\n        Hansen's is not very infectious and can be cured with treatment, though the treatment takes 1-2 years.  Nerve damage and blindness caused by Hansen's disease are not reversible.\n        </text>`;\n    } else {\n      if (disease === \"guineaworm\") {\n        return `<h3>Guinea Worm ${year}</h3>\n        <text>\n        Along with polio, dracunculiasis (the disease caused by a guinea worm infection) could plausibly be eradicated worldwide.  Although it doesn't kill people, guinea worm infections are debilitating and very painful.  (Don't watch <a href=\"https://www.youtube.com/watch?v=oCB1A2gFvuU\" target=\"_blank\">this video</a> if you're squeamish.)\n        <br>\n        <br>\n        Guinea worm infections are a result of drinking contaminated water, and it can be prevented with a cheap filter.  It's only natural resevoir is in humans, but Chad has reported infections in dogs, as well.\n        </text>`;\n      } else if (disease === \"polio\") {\n        return `<h3>Polio ${year}</h3>\n        <text>\n        To date, smallpox is the only human disease that has been eradicated, but polio may be next.  Two of the three strains of wild polio have been eliminated, and as of 2020, wild polio is present in just two countries: Afghanistan and Pakistan.\n        <br>\n        <br>\n        Polio can be prevented with vaccines, but universal coverage is difficult to achieve in some areas.  Diagnosis is also difficult because polio is often asymptomatic.\n        </text>`;\n      } else {\n        return `<h3>COVID-19 ${year}</h3>\n        <text>\n        You already know all about COVID-19!\n        <br>\n        <br>\n        \n        </text>`;\n      }\n    }\n  }\n}\nclass Sidebar {\n  constructor(ele) {\n    this.ele = ele;\n    this.ele.innerHTML = htmlString();\n  }\n  resetSidebar(disease, year) {\n    this.ele.innerHTML = htmlString2(disease, year);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sidebar);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/sidebar.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0X2dsb2JhbF9oZWFsdGgvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;